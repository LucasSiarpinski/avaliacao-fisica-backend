// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campus {
  id     Int    @id @default(autoincrement())
  name   String @unique
  city   String
  users  User[]
  alunos Aluno[]
}

model User {
  id                Int        @id @default(autoincrement())
  email             String     @unique
  name              String
  password          String
  createdAt         DateTime   @default(now())
  role              UserRole   @default(PROFESSOR)
  status            UserStatus @default(ACTIVE)
  campusId          Int
  campus            Campus     @relation(fields: [campusId], references: [id])
  alunosCadastrados Aluno[]    @relation("ProfessorAlunos")
}

enum UserRole {
  PROFESSOR
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model Aluno {
  id             Int            @id @default(autoincrement())
  nome           String
  email          String         @unique
  dataNasc       DateTime
  matricula      String         @unique
  cpf            String?
  genero         String?
  telefone       String?
  observacoes    String?        @db.Text
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  anamneseStatus AnamneseStatus @default(PENDING)
  anamneseSentAt DateTime?
  campusId       Int
  campus         Campus         @relation(fields: [campusId], references: [id])
  professorId    Int
  professor      User           @relation("ProfessorAlunos", fields: [professorId], references: [id])
  avaliacoes     Avaliacao[]
  documentos     Documento[]
}

enum AnamneseStatus {
  PENDING
  SENT
  COMPLETED
}

model Avaliacao {
  id         Int      @id @default(autoincrement())
  data       DateTime @default(now())
  tipo       String
  resultados Json
  alunoId    Int
  aluno      Aluno    @relation(fields: [alunoId], references: [id])
}

model Documento {
  id       Int      @id @default(autoincrement())
  nome     String
  tipo     String
  url      String
  uploadAt DateTime @default(now())
  alunoId  Int
  aluno    Aluno    @relation(fields: [alunoId], references: [id])
}